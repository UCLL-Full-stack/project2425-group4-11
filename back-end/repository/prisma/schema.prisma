generator client {
    provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
    id              Int       @id @default(autoincrement())
    title           String
    genre           String
    time            String   
    date            DateTime
    duration        Int
    description     String
    status          String
    tickets         Ticket[]
    artist          Artist  @relation(fields: [artistId], references: [id])
    artistId        Int
    concertHall     ConcertHall @relation(fields: [concertHallId], references: [id])
    concertHallId    Int
}

model Artist {
    id              Int       @id @default(autoincrement())
    artistName      String      
    password        String
    genres          String[]
    biography       String
    bookingFee      Int 
    socialMedia     String[]
    email           String
    isVerified      String
    role            String
    events          Event[]
    concertHalls    ConcertHallArtist[]
}

model ConcertHall {
    id              Int         @id @default(autoincrement())
    username        String
    password        String
    location        String
    capacity        Int
    name            String
    facilities      String[]
    contactInfo     String[]
    isVerified      String
    events          Event[]
    role            String
    artists         ConcertHallArtist[]
}

model Ticket {
    id                      Int       @id @default(autoincrement())
    type                    String
    status                  String
    price                   Int
    event                   Event     @relation(fields: [eventId], references: [id])
    eventId                 Int
    user                    User?      @relation(fields: [userId], references: [id])
    userId                  Int?   
}

model User {
    id              Int       @id @default(autoincrement())
    email           String
    password        String
    firstName       String
    lastName        String
    username        String
    phoneNumber     String
    accountStatus   Boolean
    role            String  
    tickets         Ticket[]
}

model ConcertHallArtist {
    id              Int          @id @default(autoincrement())
    concertHall     ConcertHall  @relation(fields: [concertHallId], references: [id])
    concertHallId   Int
    artist          Artist       @relation(fields: [artistId], references: [id])
    artistId        Int

    @@unique([concertHallId, artistId]) // Ensures unique combinations of ConcertHall and Artist
}

enum Role {
    ADMIN
    USER
    ARTIST
}